name: CI / CD

# Run on pushes or PR merges to master
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  test:
    name: 🧪 Run Vitest
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test   # or `vitest run`
  
  build-and-push:
    name: 🏗️ Build & Push Image
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up QEMU (for cross‑compile)
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build & push multi‑arch image
        uses: docker/build-push-action@v4
        with:
          push: true
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          tags: |
            lucidreline/ocdlifts:latest
            lucidreline/ocdlifts:${{ github.sha }}

  deploy:
    name: 🚀 Deploy to k3s
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Install kubectl
        uses: azure/setup-kubectl@v3

      - name: Restore Kubeconfig
        run: |
          echo "${{ secrets.KUBE_CONFIG_DATA }}" | base64 --decode > kubeconfig
        shell: bash

      - name: Deploy new image
        env:
          KUBECONFIG: ${{ github.workspace }}/kubeconfig
        run: |
          kubectl -n ocdlifts set image deployment/ocdlifts \
            ocdlifts=lucidreline/ocdlifts:latest
          kubectl -n ocdlifts rollout status deployment/ocdlifts --timeout=2m
